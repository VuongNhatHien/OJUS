# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push: 
    branches-ignore:
      - "main"

jobs:
  build-and-test:

    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: 123
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    - run: npm ci
      working-directory: ./backend

    - name: Set up environment
      run: |
        mkdir -p ./codeFiles
        touch ./.env
        touch ./.env.test

        echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> ./.env
        echo JWT_RESET=${{ secrets.JWT_RESET }} >> ./.env
        echo CLIENT_URL=${{ secrets.CLIENT_URL }} >> ./.env
        echo EMAIL_USER=${{ secrets.EMAIL_USER }} >> ./.env
        echo EMAIL_PASS=${{ secrets.EMAIL_PASS }} >> ./.env
        echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> ./.env

        echo DO_ENDPOINT=${{ vars.DO_ENDPOINT }} >> ./.env
        echo DO_CDN_URL=${{ vars.DO_CDN_URL }} >> ./.env
        echo DO_REGION=${{ vars.DO_REGION }} >> ./.env
        echo DO_BUCKET=${{ vars.DO_BUCKET }} >> ./.env
        echo DO_ACCESS=${{ secrets.DO_ACCESS }} >> ./.env
        echo DO_SECRET=${{ secrets.DO_SECRET }} >> ./.env

        echo DATABASE_URL=${{ secrets.DATABASE_URL_TEST }} >> ./.env.test
        echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> ./.env.test

        echo DO_ENDPOINT=${{ vars.DO_ENDPOINT }} >> ./.env.test
        echo DO_CDN_URL=${{ vars.DO_CDN_URL_TEST }} >> ./.env.test
        echo DO_REGION=${{ vars.DO_REGION }} >> ./.env.test
        echo DO_BUCKET=${{ vars.DO_BUCKET_TEST }} >> ./.env.test
        echo DO_ACCESS=${{ secrets.DO_ACCESS }} >> ./.env.test
        echo DO_SECRET=${{ secrets.DO_SECRET }} >> ./.env.test

      working-directory: ./backend
    - name: Run containers
      run: docker compose -f docker-compose.langs.yaml up -d
      working-directory: ./backend
    - run: npm run build --if-present
      working-directory: ./backend
    - run: npm test
      working-directory: ./backend
